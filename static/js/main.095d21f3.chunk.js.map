{"version":3,"sources":["components/filter/Filter.module.css","components/App.module.css","components/contactForm/ContactForm.module.css","components/contactsList/ContactList.module.css","components/contactForm/ContactForm.jsx","components/contactsList/Contact.jsx","components/contactsList/ContactList.jsx","components/filter/Filter.jsx","components/App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shordid","generate","numberInputId","handleInput","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","className","styles","form","htmlFor","label","input","type","id","onChange","btn","Component","Contact","contact","onRemoveContact","item","onClick","ContactList","contacts","list","map","Filter","onChangeFilter","App","filter","formSubmitHandler","data","console","log","createContact","find","alert","length","shortid","prevState","getFilteredContacts","filterStr","toLowerCase","includes","removeContact","contactId","filteredContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.095d21f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__23XmH\",\"input\":\"Filter_input__3K0YO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__6j1zw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IUqW\",\"label\":\"ContactForm_label__3cSwc\",\"input\":\"ContactForm_input__2u7Lv\",\"btn\":\"ContactForm_btn__2Kwxa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__GcKYx\",\"item\":\"ContactList_item__2EgDX\",\"btn\":\"ContactList_btn__1_Zi4\"};","import React, { Component } from 'react';\nimport shordid from 'shortid';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shordid.generate();\n  numberInputId = shordid.generate();\n\n  handleInput = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label htmlFor={this.nameInputId} className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            id={this.nameInputId}\n            onChange={this.handleInput}\n          />\n        </label>\n        <label htmlFor={this.numberInputId} className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            id={this.numberInputId}\n            onChange={this.handleInput}\n          />\n        </label>\n\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css'\n\nconst Contact = ({ contact, onRemoveContact }) => {\n  return (\n    <p className={styles.item}>\n      {contact.name}: <span>{contact.number}</span>\n      <button className={styles.btn} type=\"button\" onClick={onRemoveContact}>\n        X\n      </button>\n    </p>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  onRemoveContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport Contact from './Contact';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css'\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(contact => (\n        <li className={styles.item} key={contact.id}>\n          <Contact\n            contact={contact}\n            onRemoveContact={() => onRemoveContact(contact.id)}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onRemoveContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Filter.module.css'\n\nconst Filter = ({value, onChangeFilter}) => {\n    return (\n        <label className={styles.label}>\n          Find contacts by name\n          <input\n          className={styles.input}\n            type=\"text\"\n            name=\"filter\"\n            value={value}\n            onChange={onChangeFilter}\n          />\n        </label>\n    )\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired\n}\n\nexport default Filter\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './contactForm/ContactForm';\nimport ContactList from './contactsList/ContactList';\nimport Filter from './filter/Filter';\nimport styles from './App.module.css'\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n  formSubmitHandler = data => {\n    console.log(data);\n  };\n\n  handleInput = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  createContact = ({ name, number }) => {\n    const sameName = this.state.contacts.find(\n      contact => contact.name === name || contact.number === number,\n    );\n    if (sameName) {\n      alert(`This contact is already exists`);\n    } else if (name.length === 0 || number.length === 0) {\n      alert(`Fill in all the fields`);\n    } else {\n      const contact = {\n        id: shortid.generate(),\n        name,\n        number,\n      };\n\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  getFilteredContacts = (contacts, filterStr) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterStr.toLowerCase()),\n    );\n  };\n\n  removeContact = (contactId) => {\nthis.setState(prevState => ({contacts: prevState.contacts.filter(({id})=> id !== contactId)}))\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = this.getFilteredContacts(contacts, filter);\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.createContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChangeFilter={this.handleInput} />\n        <ContactList contacts={filteredContacts} onRemoveContact={this.removeContact}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}